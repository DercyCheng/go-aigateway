# React 前端 Dockerfile (中国内地优化版)
# ============================================
# 阶段1: 构建阶段 (优化构建时间)
# ============================================
FROM node:18-alpine AS builder

# 设置中国镜像源
RUN echo "https://mirrors.aliyun.com/alpine/v3.18/main" > /etc/apk/repositories && \
    echo "https://mirrors.aliyun.com/alpine/v3.18/community" >> /etc/apk/repositories

# 安装构建依赖
RUN apk add --no-cache git python3 make g++

# 设置时区
ENV TZ=Asia/Shanghai

# 设置npm中国镜像源
RUN npm config set registry https://registry.npmmirror.com && \
    npm config set disturl https://npmmirror.com/dist && \
    npm config set electron_mirror https://npmmirror.com/mirrors/electron/ && \
    npm config set sass_binary_site https://npmmirror.com/mirrors/node-sass && \
    npm config set phantomjs_cdnurl https://npmmirror.com/mirrors/phantomjs

WORKDIR /app

# 优化：先复制package文件，利用Docker缓存
COPY frontend/package*.json ./

# 安装依赖 (使用国内镜像源)
RUN npm ci --only=production --no-audit --no-fund

# 复制源代码
COPY frontend/ .

# 构建应用 (生产优化)
RUN npm run build

# ============================================
# 阶段2: 开发环境
# ============================================
FROM node:18-alpine AS development

# 设置中国镜像源
RUN echo "https://mirrors.aliyun.com/alpine/v3.18/main" > /etc/apk/repositories && \
    echo "https://mirrors.aliyun.com/alpine/v3.18/community" >> /etc/apk/repositories

# 安装开发工具
RUN apk add --no-cache git bash curl

# 设置时区
ENV TZ=Asia/Shanghai

# 设置npm中国镜像源
RUN npm config set registry https://registry.npmmirror.com

# 创建非root用户
RUN addgroup -g 1001 -S react && \
    adduser -u 1001 -S react -G react

WORKDIR /app

# 复制package文件
COPY frontend/package*.json ./

# 安装所有依赖 (包括开发依赖)
RUN npm install

# 复制源代码
COPY frontend/ .

# 设置权限
RUN chown -R react:react /app

# 切换到非root用户
USER react

# 暴露端口
EXPOSE 5173

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:5173 || exit 1

# 开发服务器启动
CMD ["npm", "run", "dev", "--", "--host", "0.0.0.0"]

# ============================================
# 阶段3: 生产环境 (Nginx静态服务)
# ============================================
FROM nginx:1.24-alpine AS production

# 设置中国镜像源
RUN echo "https://mirrors.aliyun.com/alpine/v3.18/main" > /etc/apk/repositories && \
    echo "https://mirrors.aliyun.com/alpine/v3.18/community" >> /etc/apk/repositories

# 安装运行时依赖
RUN apk add --no-cache curl tzdata

# 设置时区
ENV TZ=Asia/Shanghai
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# 从构建阶段复制静态文件
COPY --from=builder /app/dist /usr/share/nginx/html

# 复制自定义nginx配置
COPY deployment/nginx.conf /etc/nginx/nginx.conf

# 创建日志目录
RUN mkdir -p /var/log/nginx && \
    touch /var/log/nginx/access.log && \
    touch /var/log/nginx/error.log

# 暴露端口
EXPOSE 80

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
    CMD curl -f http://localhost || exit 1

# 启动nginx
CMD ["nginx", "-g", "daemon off;"]
