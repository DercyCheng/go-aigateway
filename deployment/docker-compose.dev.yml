version: '3.8'

services:
  # Redis 服务
  redis:
    image: redis:7-alpine
    container_name: go-aigateway-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - aigateway-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # PostgreSQL 数据库 (可选)
  postgres:
    image: postgres:15-alpine
    container_name: go-aigateway-postgres
    environment:
      POSTGRES_DB: aigateway
      POSTGRES_USER: aigateway
      POSTGRES_PASSWORD: aigateway123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - aigateway-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aigateway"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Go 后端服务
  go-backend:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.go
    container_name: go-aigateway-backend
    ports:
      - "8080:8080"
    environment:
      - ENV=development
      - REDIS_ENABLED=true
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - REDIS_POOL_SIZE=10
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=aigateway
      - DB_USER=aigateway
      - DB_PASSWORD=aigateway123
      - GOPROXY=https://goproxy.cn,direct
      - GOSUMDB=sum.golang.google.cn
    volumes:
      - ../:/app
      - go_modules:/go/pkg/mod
    working_dir: /app
    command: ["go", "run", "main.go"]
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - aigateway-network
    restart: unless-stopped

  # Python 模型服务
  python-models:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.python
    container_name: go-aigateway-python
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - PIP_INDEX_URL=https://pypi.tuna.tsinghua.edu.cn/simple
      - PIP_TRUSTED_HOST=pypi.tuna.tsinghua.edu.cn
    volumes:
      - ../python:/app
      - python_packages:/root/.cache/pip
    working_dir: /app
    command: ["python", "server.py"]
    networks:
      - aigateway-network
    restart: unless-stopped

  # React 前端服务
  react-frontend:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.react
    container_name: go-aigateway-frontend
    ports:
      - "3000:5173"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8080
      - NPM_CONFIG_REGISTRY=https://registry.npmmirror.com
    volumes:
      - ../frontend:/app
      - node_modules:/app/node_modules
    working_dir: /app
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]
    depends_on:
      - go-backend
    networks:
      - aigateway-network
    restart: unless-stopped

  # Nginx 反向代理 (可选)
  nginx:
    image: nginx:alpine
    container_name: go-aigateway-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - go-backend
      - react-frontend
      - python-models
    networks:
      - aigateway-network
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:
  go_modules:
  python_packages:
  node_modules:

networks:
  aigateway-network:
    driver: bridge
