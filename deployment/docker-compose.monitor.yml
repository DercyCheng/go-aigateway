# AI Gateway 监控服务 Docker Compose
# 独立的监控栈，可以单独部署
version: '3.8'

services:
  # ============================================
  # 监控 (Prometheus)
  # ============================================
  prometheus:
    container_name: aigateway-prometheus-monitor
    image: prom/prometheus:v2.47.0
    ports:
      - "9090:9090"
    volumes:
      - prometheus-data:/prometheus
      - ./prometheus/prometheus-dev.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/rules:/etc/prometheus/rules:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - monitoring
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============================================
  # 监控面板 (Grafana)
  # ============================================
  grafana:
    container_name: aigateway-grafana-monitor
    image: grafana/grafana:10.1.0
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
      - ./grafana/grafana-dev.ini:/etc/grafana/grafana.ini:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=redis-datasource,prometheus-datasource
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/var/lib/grafana/dashboards/ai-gateway-overview.json
    depends_on:
      - prometheus
    networks:
      - monitoring
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============================================
  # 告警管理 (AlertManager)
  # ============================================
  alertmanager:
    container_name: aigateway-alertmanager
    image: prom/alertmanager:v0.26.0
    ports:
      - "9093:9093"
    volumes:
      - alertmanager-data:/alertmanager
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    networks:
      - monitoring
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9093/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============================================
  # 节点监控 (Node Exporter)
  # ============================================
  node-exporter:
    container_name: aigateway-node-exporter
    image: prom/node-exporter:v1.6.1
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring
    restart: unless-stopped

  # ============================================
  # Redis 监控 (Redis Exporter)
  # ============================================
  redis-exporter:
    container_name: aigateway-redis-exporter
    image: oliver006/redis_exporter:v1.55.0
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://host.docker.internal:6379
    networks:
      - monitoring
    restart: unless-stopped

  # ============================================
  # PostgreSQL 监控 (Postgres Exporter)
  # ============================================
  postgres-exporter:
    container_name: aigateway-postgres-exporter
    image: prometheuscommunity/postgres-exporter:v0.14.0
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_NAME=postgresql://aigateway:aigateway_dev_password@host.docker.internal:5432/ai_gateway?sslmode=disable
    networks:
      - monitoring
    restart: unless-stopped

  # ============================================
  # 日志聚合 (Loki)
  # ============================================
  loki:
    container_name: aigateway-loki
    image: grafana/loki:2.9.2
    ports:
      - "3100:3100"
    volumes:
      - loki-data:/loki
      - ./loki/loki-config.yml:/etc/loki/local-config.yaml:ro
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring
    restart: unless-stopped

  # ============================================
  # 日志收集 (Promtail)
  # ============================================
  promtail:
    container_name: aigateway-promtail
    image: grafana/promtail:2.9.2
    volumes:
      - ./promtail/promtail-config.yml:/etc/promtail/config.yml:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - monitoring
    restart: unless-stopped

# ============================================
# 网络配置
# ============================================
networks:
  monitoring:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.24.0.0/16

# ============================================
# 数据卷配置
# ============================================
volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  alertmanager-data:
    driver: local
  loki-data:
    driver: local
