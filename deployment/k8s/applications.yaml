# AI Gateway Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: ai-gateway
  labels:
    app: backend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: backend
          image: registry.cn-hangzhou.aliyuncs.com/ai-gateway/backend:1.0.0
          ports:
            - containerPort: 8080
              name: http
          env:
            - name: GIN_MODE
              value: "release"
          envFrom:
            - configMapRef:
                name: ai-gateway-config
            - secretRef:
                name: ai-gateway-secrets
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1001
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: logs-volume
              mountPath: /app/logs
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: logs-volume
          emptyDir: {}
      serviceAccountName: ai-gateway-backend
---
# Backend Service
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: ai-gateway
  labels:
    app: backend
spec:
  selector:
    app: backend
  ports:
    - port: 8080
      targetPort: 8080
      name: http
  type: ClusterIP
---
# Python Models Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-models
  namespace: ai-gateway
  labels:
    app: python-models
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: python-models
  template:
    metadata:
      labels:
        app: python-models
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: python-models
          image: registry.cn-hangzhou.aliyuncs.com/ai-gateway/python:1.0.0
          ports:
            - containerPort: 5000
              name: http
          env:
            - name: MODEL_TYPE
              value: "chat"
            - name: MODEL_SIZE
              value: "large"
            - name: USE_THIRD_PARTY
              value: "true"
            - name: WORKERS
              value: "4"
          envFrom:
            - configMapRef:
                name: ai-gateway-config
            - secretRef:
                name: ai-gateway-secrets
          livenessProbe:
            httpGet:
              path: /health
              port: 5000
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 5000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            requests:
              memory: "2Gi"
              cpu: "1000m"
            limits:
              memory: "4Gi"
              cpu: "2000m"
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1001
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: models-cache
              mountPath: /app/.cache
            - name: logs-volume
              mountPath: /app/logs
      volumes:
        - name: models-cache
          persistentVolumeClaim:
            claimName: models-cache-pvc
        - name: logs-volume
          emptyDir: {}
      serviceAccountName: ai-gateway-python
---
# Python Models Service
apiVersion: v1
kind: Service
metadata:
  name: python-models-service
  namespace: ai-gateway
  labels:
    app: python-models
spec:
  selector:
    app: python-models
  ports:
    - port: 5000
      targetPort: 5000
      name: http
  type: ClusterIP
---
# Models Cache PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: models-cache-pvc
  namespace: ai-gateway
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
# Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: ai-gateway
  labels:
    app: frontend
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: registry.cn-hangzhou.aliyuncs.com/ai-gateway/frontend:1.0.0
          ports:
            - containerPort: 80
              name: http
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 101
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: nginx-cache
              mountPath: /var/cache/nginx
            - name: nginx-run
              mountPath: /var/run
      volumes:
        - name: nginx-cache
          emptyDir: {}
        - name: nginx-run
          emptyDir: {}
---
# Frontend Service
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: ai-gateway
  labels:
    app: frontend
spec:
  selector:
    app: frontend
  ports:
    - port: 80
      targetPort: 80
      name: http
  type: ClusterIP
